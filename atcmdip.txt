//================= Hercules Script =======================================
//=       _   _                     _
//=      | | | |                   | |
//=      | |_| | ___ _ __ ___ _   _| | ___  ___
//=      |  _  |/ _ \ '__/ __| | | | |/ _ \/ __|
//=      | | | |  __/ | | (__| |_| | |  __/\__ \
//=      \_| |_/\___|_|  \___|\__,_|_|\___||___/
//================= License ===============================================
//= This file is part of Hercules.
//= http: //herc.ws - http: //github.com/HerculesWS/Hercules
//=
//= Copyright (C)  Ridley
//=
//= Hercules is free software: you can redistribute it and/or modify
//= it under the terms of the GNU General Public License as published by
//= the Free Software Foundation, either version 3 of the License, or
//= (at your option) any later version.
//=
//= This program is distributed in the hope that it will be useful,
//= but WITHOUT ANY WARRANTY; without even the implied warranty of
//= MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//= GNU General Public License for more details.
//=
//= You should have received a copy of the GNU General Public License
//= along with this program.  If not, see <http: //www.gnu.org/licenses/>.
//=========================================================================
//= @ip command
//================= Description ===========================================
//= Use command to track a specific player
//================= Current Version =======================================
//= 1.2
//=========================================================================

-	script	atcmd_ip	FAKE_NPC,{

OnInit:
	bindatcmd("ip", strnpcinfo(NPC_NAME) +"::OnAtcommand", 10, 99); // who can use it?
	.samegroup = 0; // can view ip's of people with same or higher group id? 0 = No, 1 = Yes
	end;

OnAtcommand:
	if (!.@atcmd_numparameters) { // need to input something
		message(strcharinfo(PC_NAME), sprintf(_$("Usage: %s <player name>"), .@atcmd_command$));
		message(strcharinfo(PC_NAME), sprintf(_$("%s failed."), .@atcmd_command$));
		end;
	}
	for (.@i = 0; .@i < .@atcmd_numparameters; .@i++)
		.@fullname$ = .@fullname$+" "+ .@atcmd_parameters$[.@i];
	.@aid = getcharid(CHAR_ID_ACCOUNT, .@atcmd_parameters$);
	if (!.@aid) { // not found
		message(strcharinfo(PC_NAME), sprintf(_$("Player %s not found or not online."), .@fullname$));
		end;
	}
	query_sql("SELECT `last_ip`, `group_id` FROM `login` WHERE `account_id`='"+ .@aid +"'", .@aip$, .@gid); // escape_sql not needed
	if (.@gid >= getgroupid() && (!.samegroup)) {
		message(strcharinfo(PC_NAME), "You cannot view the IP of a GM with the same or higher Permission Group than you.");
		end;
	}
	query_sql("SELECT `char`.`char_id`, `char`.`account_id`, `char`.`name` FROM `char` LEFT JOIN login ON `char`.account_id=login.account_id WHERE login.last_ip='"+.@aip$+"'", .@cid, .@aids, .@name$);
	dispbottom(sprintf(_$(" ======= %s's IP is: %d  ======="), .@fullname$, .@aip$)); // generate overview
	dispbottom(_(" ===== Online players with the same IP: ====="));
	.@i = 0;
	while (.@i < getarraysize(.@aids)) {
		if (isloggedin(.@aids[.@i], .@cid[.@i])) {
			getmapxy(.@mapname$, .@mapx, .@mapy, 0, .@name$[.@i]);
			dispbottom(sprintf(_$("-- %s (%s %d / %d) "), .@name$[.@i], .@mapname$, .@mapx, .@mapy));
		}
		.@i++;
	}
	end;
}
